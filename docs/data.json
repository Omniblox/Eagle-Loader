{
    "project": {
        "name": "EagleLoader",
        "description": "Visualize EAGLE .brd files in the browser.",
        "version": "0.1.0",
        "url": "http://omniblox.io/eagleloader"
    },
    "files": {
        "src/BRDLoader.js": {
            "name": "src/BRDLoader.js",
            "modules": {},
            "classes": {
                "THREE.BRDLoader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/eagle-brd-renderer.js": {
            "name": "src/eagle-brd-renderer.js",
            "modules": {
                "EagleBrdRenderer": 1
            },
            "classes": {
                "EagleBrdRenderer": 1,
                "EagleBrdRenderer.AngleData": 1,
                "EagleBrdRenderer.ChordData": 1,
                "EagleBrdRenderer.Layer": 1
            },
            "fors": {},
            "namespaces": {
                "EagleBrdRenderer": 1
            }
        }
    },
    "modules": {
        "EagleBrdRenderer": {
            "name": "EagleBrdRenderer",
            "submodules": {},
            "elements": {},
            "classes": {
                "THREE.BRDLoader": 1,
                "EagleBrdRenderer": 1,
                "EagleBrdRenderer.AngleData": 1,
                "EagleBrdRenderer.ChordData": 1,
                "EagleBrdRenderer.Layer": 1
            },
            "fors": {},
            "namespaces": {
                "EagleBrdRenderer": 1
            },
            "tag": "module",
            "file": "src/eagle-brd-renderer.js",
            "line": 3439
        }
    },
    "classes": {
        "THREE.BRDLoader": {
            "name": "THREE.BRDLoader",
            "shortname": "THREE.BRDLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EagleBrdRenderer",
            "file": "src/BRDLoader.js",
            "line": 3,
            "description": "EAGLE .BRD Loader for THREE.js\n\nDavid ten Have, St. Zeno Exploration Ltd.\n\nThis script is a helper for loading the output of EagleBrdRenderer\ninto a THREE.js environment",
            "is_constructor": 1,
            "params": [
                {
                    "name": "manager",
                    "description": "Loading manager to use",
                    "type": "THREE.LoadingManager",
                    "optional": true
                }
            ]
        },
        "EagleBrdRenderer": {
            "name": "EagleBrdRenderer",
            "shortname": "EagleBrdRenderer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer",
            "file": "src/eagle-brd-renderer.js",
            "line": 28,
            "description": "Creator of board renders. Reads XML and composites the appropriate\ntextures and geometry.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "xml",
                    "description": "XML document to parse",
                    "type": "Document"
                },
                {
                    "name": "params",
                    "description": "Composite parameter object",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "color",
                            "description": "Define custom colors; see `this.colors`",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "composite",
                            "description": "Whether to composite layers,\n\t\tor render them as individual geometries. Warning: individual\n\t\tlayers are very slow.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "maskOpacity",
                            "description": "Opacity of solder mask;\n\t\topacity is halved over copper traces",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.8"
                        },
                        {
                            "name": "material",
                            "description": "Material shader to use.\n\t\tOptions include `\"phong\"` for realistic lighting,\n\t\t`\"lambert\"` for flat lighting, and `\"basic\"` for no lighting.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"phong\""
                        },
                        {
                            "name": "pixelMicrons",
                            "description": "Resolution of texture maps.\n\t\tBy default, this is 35 microns, equal to the thickness\n\t\tof a default copper layer. Note that this will affect the\n\t\tsize of the board geometry.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "35"
                        },
                        {
                            "name": "thickness",
                            "description": "Override computed thickness\n\t\tof board. Measured in millimeters. Note that this value will be\n\t\tconverted to pixels for use within the board.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "viewConnectors",
                            "description": "Whether to visualize\n\t\tConnector objects",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "viewGhosts",
                            "description": "Whether to draw\n\t\tapproximate ghosts of on-board devices",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ]
        },
        "EagleBrdRenderer.AngleData": {
            "name": "EagleBrdRenderer.AngleData",
            "shortname": "AngleData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer",
            "file": "src/eagle-brd-renderer.js",
            "line": 3236,
            "description": "Holds data about a BRD angle.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "ang",
                    "description": "BRD angle description",
                    "type": "String"
                }
            ]
        },
        "EagleBrdRenderer.ChordData": {
            "name": "EagleBrdRenderer.ChordData",
            "shortname": "ChordData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer",
            "file": "src/eagle-brd-renderer.js",
            "line": 3278,
            "description": "Analysis of the chord and circular segment described\nby a curving wire element.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "chord",
                    "description": "EAGLE BRD `wire` XML element.\n\tMay also be a JS object definition.",
                    "type": "Element"
                }
            ]
        },
        "EagleBrdRenderer.Layer": {
            "name": "EagleBrdRenderer.Layer",
            "shortname": "Layer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer",
            "file": "src/eagle-brd-renderer.js",
            "line": 3439,
            "description": "Define a layer of a PCB board. This contains a list of elements,\nand the render of these elements.\n\nLayer objects do not correspond directly to BRD layers.\nThey may combine many BRD layers into one target,\nsuch as for rendering silkscreen;\nshare an element across multiple targets,\nsuch as with vias and holes;\nor ignore a BRD layer entirely,\nsuch as with Symbol layers.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "params",
                    "description": "Composite parameter object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "board",
                            "description": "Master board",
                            "type": "EagleBrdRenderer"
                        },
                        {
                            "name": "height",
                            "description": "Offset of layer from base in pixels",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "layers",
                            "description": "List of BRD layer numbers to follow",
                            "type": "Array"
                        },
                        {
                            "name": "name",
                            "description": "Unique layer identifier",
                            "type": "String"
                        },
                        {
                            "name": "tags",
                            "description": "List of tag strings",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "thickness",
                            "description": "Thickness of layer in pixels",
                            "type": "Number"
                        },
                        {
                            "name": "visible",
                            "description": "Whether this layer is\n\t\tpart of the physical board",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ]
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "src/BRDLoader.js",
            "line": 26,
            "description": "Start loading the BRD and associated fonts.",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "url",
                    "description": ".brd file URL",
                    "type": "String"
                },
                {
                    "name": "brdParams",
                    "description": "Composite parameter object\n\tdescribing params for rendering the .brd file",
                    "type": "Object",
                    "props": [
                        {
                            "name": "color",
                            "description": "Define custom colors;\n\t\tsee `this.colors`",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "composite",
                            "description": "Whether to\n\t\tcomposite layers, or render them as individual geometries.\n\t\tWarning: individual layers are very slow.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "maskOpacity",
                            "description": "Opacity of solder mask;\n\t\topacity is halved over copper traces",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.8"
                        },
                        {
                            "name": "pixelMicrons",
                            "description": "Resolution of texture maps.\n\t\tBy default, this is 35 microns, equal to the thickness\n\t\tof a default copper layer. Note that this will affect the\n\t\tsize of the board geometry.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "35"
                        },
                        {
                            "name": "material",
                            "description": "Material shader to use.\n\t\tOptions include `\"phong\"` for realistic lighting,\n\t\t`\"lambert\"` for flat lighting, and `\"basic\"` for no lighting.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"phong\""
                        },
                        {
                            "name": "viewConnectors",
                            "description": "Whether to visualize\n\t\tConnector objects",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "viewGhosts",
                            "description": "Whether to draw\n\t\tapproximate ghosts of on-board devices",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "onLoad",
                    "description": "Will be called when load completes.\n\tThe argument will be the loaded Object3D.",
                    "type": "Function"
                },
                {
                    "name": "onProgress",
                    "description": "Will be called while load progresses.\n\tThe argument will be the XmlHttpRequest instance,\n\tthat contain .total and .loaded bytes.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "onError",
                    "description": "Will be called when load errors.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "fontPath",
                    "description": "Paths to font files.\n\tDefaults to the array `\"./OCRA.woff\", \"./OCRA.otf\"`.\n\tYou may specify any number of files as fallbacks,\n\tbut a WOFF and OTF should cover all your bases.\n\tIf you specify `null`, the loader will skip font loading.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "class": "THREE.BRDLoader"
        },
        {
            "file": "src/BRDLoader.js",
            "line": 117,
            "description": "Construct the EagleBrdRenderer object THREE.js geometry (brd.root),\nbearing composited textures from all layers.",
            "itemtype": "method",
            "name": "_parse",
            "params": [
                {
                    "name": "data",
                    "description": "Contents of the .brd file as a string",
                    "type": "String"
                },
                {
                    "name": "brdParams",
                    "description": "Composite parameter object describing params\n\tfor rendering the .brd file",
                    "type": "Object",
                    "props": [
                        {
                            "name": "color",
                            "description": "Define custom colors;\n\t\tsee `this.colors`",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "composite",
                            "description": "Whether to\n\t\tcomposite layers, or render them as individual geometries.\n\t\tWarning: individual layers are very slow.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "maskOpacity",
                            "description": "Opacity of solder mask;\n\t\topacity is halved over copper traces",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.8"
                        },
                        {
                            "name": "pixelMicrons",
                            "description": "Resolution of texture maps.\n\t\tBy default, this is 35 microns, equal to the thickness\n\t\tof a default copper layer. Note that this will affect the\n\t\tsize of the board geometry.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "35"
                        },
                        {
                            "name": "material",
                            "description": "Material shader to use.\n\t\tOptions include `\"phong\"` for realistic lighting,\n\t\t`\"lambert\"` for flat lighting, and `\"basic\"` for no lighting.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"phong\""
                        },
                        {
                            "name": "viewConnectors",
                            "description": "Whether to\n\t\tvisualize Connector objects",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "viewGhosts",
                            "description": "Whether to\n\t\tdraw approximate ghosts of on-board devices",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "THREE.BRDLoader"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 62,
            "description": "Collection of colors used to render boards.",
            "itemtype": "property",
            "name": "colors",
            "type": "Object",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer",
            "subprops": [
                {
                    "name": "bounds",
                    "description": "\"rgb( 32, 192, 32 )\"",
                    "type": "String"
                },
                {
                    "name": "copper",
                    "description": "\"rgb( 255, 222, 164 )\"",
                    "type": "String"
                },
                {
                    "name": "prepreg",
                    "description": "\"rgb( 238, 238, 230 )\"",
                    "type": "String"
                },
                {
                    "name": "silkscreen",
                    "description": "\"rgb( 255, 255, 255 )\"",
                    "type": "String"
                },
                {
                    "name": "solderMask",
                    "description": "\"rgb( 32, 64, 192 )\"",
                    "type": "String"
                },
                {
                    "name": "solderPaste",
                    "description": "\"rgb( 192, 192, 222 )\"",
                    "type": "String"
                }
            ]
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 83,
            "description": "List of `Connector` objects associated with packaged elements,\nsuch as resistors, surface-mounted devices, and other predefined\nboard components",
            "itemtype": "property",
            "name": "connectElements",
            "type": "Array",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 92,
            "description": "List of `Connector` objects associated with holes and pads",
            "itemtype": "property",
            "name": "connectHoles",
            "type": "Array",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 99,
            "description": "List of `Connector` handles; used to toggle visibility",
            "itemtype": "property",
            "name": "connectorHandles",
            "type": "Array",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 106,
            "description": "Opacity of soldermask",
            "itemtype": "property",
            "name": "_maskOpacity",
            "type": "Number",
            "default": "0.8",
            "access": "private",
            "tagname": "",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 115,
            "description": "Material shader to use.",
            "itemtype": "property",
            "name": "material",
            "type": "Function",
            "default": "THREE.MeshPhongMaterial",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 129,
            "description": "Shininess of 3D components",
            "itemtype": "property",
            "name": "_shininess",
            "type": "Number",
            "default": "128",
            "access": "private",
            "tagname": "",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 138,
            "description": "Microns per pixel. A higher pixelMicrons value produces a smaller board.",
            "itemtype": "property",
            "name": "pixelMicrons",
            "type": "Number",
            "default": "35",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 147,
            "description": "Root THREE.js transform, containing board elements",
            "itemtype": "property",
            "name": "root",
            "type": "THREE.Object3D",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 154,
            "description": "Total board thickness, including solderpaste and mask layers.\nDoes not actually check for presence of solderpaste or mask.\n\nThis figure is measured in pixels relative to the board.\nTo find the distance in microns, multiply by `this.pixelMicrons`.\n\nBy default, this is computed from BRD data. If specified in\nthe params, it will override that value.",
            "itemtype": "property",
            "name": "thickness",
            "type": "Number",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 170,
            "description": "XML document that contains the board data",
            "itemtype": "property",
            "name": "xml",
            "type": "Document",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 181,
            "description": "PCB layers to be combined into the final board",
            "itemtype": "property",
            "name": "layers",
            "type": "Array",
            "default": "[]",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 189,
            "description": "Scale factor for converting from millimeters to pixels.\nCoords in the XML should be multiplied by this before drawing.",
            "itemtype": "property",
            "name": "coordScale",
            "type": "Number",
            "default": "28.57",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 231,
            "description": "Construct THREE.js geometry, bearing composited textures from all layers.",
            "itemtype": "method",
            "name": "_buildCompositeGeometry",
            "params": [
                {
                    "name": "add",
                    "description": "Whether to add geometry to the board root",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 245,
            "description": "Composite of all layer textures, top-oriented.",
            "itemtype": "property",
            "name": "layerCompositeTop",
            "type": "EagleBrdRenderer.Layer",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 278,
            "description": "Composite of all layer textures, bottom-oriented.",
            "itemtype": "property",
            "name": "layerCompositeBottom",
            "type": "EagleBrdRenderer.Layer",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 324,
            "description": "Construct THREE.js geometry representing depth elements,\nsuch as holes and edges.\n\nThis grouping also includes element connectors,\nto keep them out of the root child space.",
            "itemtype": "method",
            "name": "_buildDepthElements",
            "params": [
                {
                    "name": "add",
                    "description": "Whether to add geometry to the board root",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 338,
            "description": "Collection of THREE.js geometry representing depth elements.",
            "itemtype": "property",
            "name": "depthElements",
            "type": "THREE.Object3D",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 358,
            "description": "Construct THREE.js geometry representing depth edges.\n\nThis uses `THREE.Shape` to define the edge paths.\nAs `THREE.ExtrudeGeometry` does not properly skip `Shape.moveTo`\nadjustments, we generate an individual mesh for each continuous loop.",
            "itemtype": "method",
            "name": "_buildDepthEdges",
            "params": [
                {
                    "name": "add",
                    "description": "Whether to add geometry to the board root",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 379,
            "description": "Texture buffer to create bevel effect on edges",
            "itemtype": "property",
            "name": "bufferEdge",
            "type": "HTMLCanvasElement",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 402,
            "description": "THREE.js texture for beveled edges",
            "itemtype": "property",
            "name": "textureEdge",
            "type": "THREE.Texture",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 521,
            "description": "Assemble a single continuous extruded edge from a shape.",
            "itemtype": "method",
            "name": "_buildDepthEdge",
            "params": [
                {
                    "name": "shape",
                    "description": "Shape path to use for extrusion",
                    "type": "THREE.Shape"
                },
                {
                    "name": "material",
                    "description": "Material to use for mesh",
                    "type": "THREE.Material"
                },
                {
                    "name": "parentElement",
                    "description": "Parent space used to align edge mesh",
                    "type": "Element",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "THREE.Mesh"
            },
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 602,
            "description": "Construct THREE.js geometry representing depth elements,\nincluding drills in holes, vias, and pads.\n\nThis includes `Connector` objects for holes and pads,\nto allow the PCB to become part of an assembly.\nThese are listed in `connectHoles`.\n\nNOTE: Currently, all holes are assumed to be copper-coated.",
            "itemtype": "method",
            "name": "_buildDepthHoles",
            "params": [
                {
                    "name": "add",
                    "description": "Whether to add geometry to the board root",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 760,
            "description": "Construct THREE.js geometry bearing the generated textures.\nThis is probably too detailed for everyday use,\nbut might have some utility in generating exploded layer views.",
            "itemtype": "method",
            "name": "_buildLayerGeometry",
            "params": [
                {
                    "name": "add",
                    "description": "Whether to add geometry to the board root",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 785,
            "description": "Apply offset to element connectors generated before that information\nwas available.",
            "itemtype": "method",
            "name": "_finalizeElementConnectors",
            "access": "private",
            "tagname": "",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 803,
            "description": "Determine and record the boundaries of the board surface.\nThis is derived from `eagle.drawing.board.plain` elements.",
            "itemtype": "method",
            "name": "_parseBounds",
            "access": "private",
            "tagname": "",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 969,
            "description": "Information on physical bounds of board, in mm.",
            "itemtype": "property",
            "name": "bounds",
            "type": "Object",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer",
            "subprops": [
                {
                    "name": "maxX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "maxY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "minX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "minY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 989,
            "description": "Horizontal resolution of this board's texture maps.",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 996,
            "description": "Vertical resolution of this board's texture maps.",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 1003,
            "description": "Horizontal offset for drawing pixels",
            "itemtype": "property",
            "name": "offsetX",
            "type": "Number",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 1010,
            "description": "Vertical offset for drawing pixels",
            "itemtype": "property",
            "name": "offsetY",
            "type": "Number",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 1027,
            "description": "Parse an element from the BRD which contains primitives.\nIf if encounters a package, it will recurse and parse that element.\nPrimitives are deployed to any number of layers, from 0 to all,\ndepending on which layers want it.",
            "itemtype": "method",
            "name": "_parseCollection",
            "params": [
                {
                    "name": "el",
                    "description": "XML element from BRD to parse",
                    "type": "Element"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 1071,
            "description": "Set `designRules` to contain important circuit rules from XML.",
            "itemtype": "method",
            "name": "_parseDesignRules",
            "access": "private",
            "tagname": "",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 1084,
            "description": "Design rules for this PCB layout. These are used in determining\nvarious important layout characteristics.",
            "itemtype": "property",
            "name": "designRules",
            "type": "Object",
            "default": "{}",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 1102,
            "description": "Parse an `<element>` element from the XML library.\n\nThis will also register the element as a `Connector` object\nin `connectElements`.",
            "itemtype": "method",
            "name": "_parseElement",
            "params": [
                {
                    "name": "el",
                    "description": "`<element>` element to parse",
                    "type": "Element"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 1150,
            "description": "Element currently being parsed. Used to append data to package elements.",
            "itemtype": "property",
            "name": "_elementCurrent",
            "type": "Element",
            "default": "undefined",
            "access": "private",
            "tagname": "",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 1195,
            "description": "Initialize layers and populate them with the BRD elements.\n\nDerives layer identities from designrules.\nThese are described as layers and combinations.\n\nLayers are identified by numbers.\nCombinations are either \"+\" or \"*\".\n\n* \"*\" combinations are core-fused.\n* \"+\" combinations are prepreg-fused.\n* \":\" combinations are discardable information about blind vias.\n* \"(\" and \"[\" are also discardable via information.\n\nThe combination method doesn't really matter, except for texturing.\nWhat matters is that we discard blind vias,\nand correctly identify copper and isolate layers in sequence.\nThickness is defined in designrules as mtCopper and mtIsolate,\nin order of encountered types.\n\nFor example, `(1*16)` can be simplified to `1*16`, and means\n\"copper layer 1, then a core isolate layer, then copper layer 2\".\nThe copper layer thicknesses are found in `mtCopper` [ 0 ] and [ 1 ].\nThe isolate layer is found in `mtIsolate` [ 0 ].\n\nThis method will also create cream, mask, and board layers.",
            "itemtype": "method",
            "name": "_populateLayers",
            "access": "private",
            "tagname": "",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 1389,
            "description": "Create ghost versions of the library components on the PCB.\nThese are not very accurate, as the library is purely a schematic,\nbut they'll serve as stand-ins.",
            "itemtype": "method",
            "name": "buildGhostPackages",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 1400,
            "description": "Grouping of ghost package meshes.",
            "itemtype": "property",
            "name": "ghostPackages",
            "type": "THREE.Object3D",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 1478,
            "description": "Draw a series of circles, using current drawing styles.",
            "itemtype": "method",
            "name": "drawCircles",
            "params": [
                {
                    "name": "params",
                    "description": "Composite parameter object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "layer",
                            "description": "Layer being drawn",
                            "type": "EagleBrdRenderer.Layer"
                        },
                        {
                            "name": "offset",
                            "description": "Extra size",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "circles",
                            "description": "List of circle elements to draw",
                            "type": "Array"
                        },
                        {
                            "name": "layerMatch",
                            "description": "If defined,\n\t\tonly elements with a matching `layer` attribute will draw",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "fill",
                            "description": "Whether to fill circles",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "stroke",
                            "description": "Whether to stroke circles",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 1538,
            "description": "Draw a series of drill holes, using current drawing styles.",
            "itemtype": "method",
            "name": "drawHoles",
            "params": [
                {
                    "name": "params",
                    "description": "Composite parameter object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "layer",
                            "description": "Layer being drawn",
                            "type": "EagleBrdRenderer.Layer"
                        },
                        {
                            "name": "offset",
                            "description": "Extra radius",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "holes",
                            "description": "List of hole or via elements to draw",
                            "type": "Array"
                        }
                    ]
                }
            ],
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 1589,
            "description": "Draw a series of pads, using current drawing styles.",
            "itemtype": "method",
            "name": "drawPads",
            "params": [
                {
                    "name": "params",
                    "description": "Composite parameter object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "layer",
                            "description": "Layer being drawn",
                            "type": "EagleBrdRenderer.Layer"
                        },
                        {
                            "name": "offset",
                            "description": "Extra radius",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "pads",
                            "description": "List of pad elements to draw",
                            "type": "Array"
                        }
                    ]
                }
            ],
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 1711,
            "description": "Draw a series of polygons, using current draw styles.\n\nNOTE: Some polygons can become part of pads.\nThis is not implemented in this version. A thin isolation gap\nwill appear around the core pad. Signal merging would be optimal.",
            "itemtype": "method",
            "name": "drawPolygons",
            "params": [
                {
                    "name": "params",
                    "description": "Composite parameter object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "layer",
                            "description": "Layer being drawn",
                            "type": "EagleBrdRenderer.Layer"
                        },
                        {
                            "name": "layerMatch",
                            "description": "If defined,\n\t\tonly elements with a matching `layer` attribute will draw",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "polys",
                            "description": "List of polygon elements to render",
                            "type": "Array"
                        },
                        {
                            "name": "offset",
                            "description": "Extra margins",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 1807,
            "description": "Draw a series of rectangles, using current drawing styles.",
            "itemtype": "method",
            "name": "drawRectangles",
            "params": [
                {
                    "name": "params",
                    "description": "Composite parameter object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "layer",
                            "description": "Layer being drawn",
                            "type": "EagleBrdRenderer.Layer"
                        },
                        {
                            "name": "offset",
                            "description": "Extra size",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "rects",
                            "description": "List of rectangle elements to draw",
                            "type": "Array"
                        },
                        {
                            "name": "layerMatch",
                            "description": "If defined,\n\t\tonly elements with a matching `layer` attribute will draw",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 1862,
            "description": "Draw a series of smds, using current drawing styles.",
            "itemtype": "method",
            "name": "drawSmds",
            "params": [
                {
                    "name": "params",
                    "description": "Composite parameter object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "layer",
                            "description": "Layer being drawn",
                            "type": "EagleBrdRenderer.Layer"
                        },
                        {
                            "name": "offset",
                            "description": "Extra size",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "smds",
                            "description": "List of SMD elements to draw",
                            "type": "Array"
                        }
                    ]
                }
            ],
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 1915,
            "description": "Draw a series of text legends, using current drawing styles.",
            "itemtype": "method",
            "name": "drawTexts",
            "params": [
                {
                    "name": "params",
                    "description": "Composite parameter object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "layer",
                            "description": "Layer being drawn",
                            "type": "EagleBrdRenderer.Layer"
                        },
                        {
                            "name": "offset",
                            "description": "Extra size",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "texts",
                            "description": "List of text elements to draw",
                            "type": "Array"
                        },
                        {
                            "name": "layerMatch",
                            "description": "If defined,\n\t\tonly elements with a matching `layer` attribute will draw",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 2059,
            "description": "Draw a series of via rings, using current drawing styles.",
            "itemtype": "method",
            "name": "drawViaRings",
            "params": [
                {
                    "name": "params",
                    "description": "Composite parameter object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "layer",
                            "description": "Layer being drawn",
                            "type": "EagleBrdRenderer.Layer"
                        },
                        {
                            "name": "offset",
                            "description": "Extra radius",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "vias",
                            "description": "List of via elements to draw",
                            "type": "Array"
                        }
                    ]
                }
            ],
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 2130,
            "description": "Draw a series of paths from an array of wires.\nThese paths are not continuous. Each has its own stroke width.\n\nStroke style, other than width, does not change.",
            "itemtype": "method",
            "name": "drawWirePaths",
            "params": [
                {
                    "name": "params",
                    "description": "Composite parameter object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "layer",
                            "description": "Layer being drawn",
                            "type": "EagleBrdRenderer.Layer"
                        },
                        {
                            "name": "widthOffset",
                            "description": "Extra width",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "wires",
                            "description": "List of wire elements to draw",
                            "type": "Array"
                        },
                        {
                            "name": "layerMatch",
                            "description": "If defined,\n\t\tonly elements with a matching `layer` attribute will draw",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 2197,
            "description": "Return a list of `[ x, y ]` coordinate pairs\nrepresenting the cardinal points of a circle described by the\ncurvature of the parameter.\n\nThe parameter may be a wire or polygon vertex element.\n\nThis list may be length 0.",
            "itemtype": "method",
            "name": "getChordPoints",
            "params": [
                {
                    "name": "el",
                    "description": "Wire or vertex element to assess",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "array"
            },
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 2254,
            "description": "Return a layer of the specified name.",
            "itemtype": "method",
            "name": "getLayer",
            "params": [
                {
                    "name": "name",
                    "description": "Identifier of the layer",
                    "type": "String"
                }
            ],
            "return": {
                "description": "EagleBrdRenderer.Layer"
            },
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 2274,
            "description": "Convert a string coord into a pixel number.",
            "itemtype": "method",
            "name": "parseCoord",
            "params": [
                {
                    "name": "coord",
                    "description": "String that represents a number in mm",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Coord in pixels",
                "type": "Number"
            },
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 2288,
            "description": "Return the distance measured by a BRD string, e.g. \"0.035mm\".\nThis distance is measured in mm.",
            "itemtype": "method",
            "name": "parseDistanceMm",
            "params": [
                {
                    "name": "dist",
                    "description": "Distance string from BRD XML",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Distance in mm",
                "type": "Number"
            },
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 2326,
            "description": "Render the bounds to a buffer.",
            "itemtype": "method",
            "name": "renderBounds",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 2472,
            "description": "Render all copper textures.",
            "itemtype": "method",
            "name": "renderCopper",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 2490,
            "description": "Render a copper layer.",
            "itemtype": "method",
            "name": "renderCopperLayer",
            "params": [
                {
                    "name": "layer",
                    "description": "Layer to initialize and parse",
                    "type": "EagleBrdRenderer.Layer"
                }
            ],
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 2624,
            "description": "Render all isolate textures, including prepreg and core.",
            "itemtype": "method",
            "name": "renderIsolate",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 2642,
            "description": "Render an isolate layer, either prepreg or core.",
            "itemtype": "method",
            "name": "renderIsolateLayer",
            "params": [
                {
                    "name": "layer",
                    "description": "Layer to initialize and parse",
                    "type": "EagleBrdRenderer.Layer"
                },
                {
                    "name": "viaSource",
                    "description": "Layer with vias to use",
                    "type": "EagleBrdRenderer.Layer"
                }
            ],
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 2692,
            "description": "Render all solder mask textures. These bear silkscreen.",
            "itemtype": "method",
            "name": "renderSolderMask",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 2710,
            "description": "Render a solder mask layer. This bears silkscreen legends.",
            "itemtype": "method",
            "name": "renderSolderMaskLayer",
            "params": [
                {
                    "name": "layer",
                    "description": "Layer to initialize and parse",
                    "type": "EagleBrdRenderer.Layer"
                }
            ],
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 2899,
            "description": "Render all solder paste textures.",
            "itemtype": "method",
            "name": "renderSolderpaste",
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 2917,
            "description": "Render a solderpaste layer, also known as a cream layer.",
            "itemtype": "method",
            "name": "renderSolderpasteLayer",
            "params": [
                {
                    "name": "layer",
                    "description": "Layer to initialize and parse",
                    "type": "EagleBrdRenderer.Layer"
                }
            ],
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 2968,
            "description": "Sort the wires in a list so that they connect end-to-end\nwhenever possible.\n\nWires may be reversed to fit into sequence.\n\nDuplicate wires will be discarded. Note that duplication only considers\nendpoints, not curvature.",
            "itemtype": "method",
            "name": "sortWires",
            "params": [
                {
                    "name": "wires",
                    "description": "List of wires to sort",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Sorted list",
                "type": "Array"
            },
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3157,
            "description": "Set connector handle visibility.",
            "itemtype": "method",
            "name": "viewConnectors",
            "params": [
                {
                    "name": "show",
                    "description": "Whether to show connectors or not",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3176,
            "description": "Set ghost device visibility. These are just an approximation of\npossible devices, inferred from pad positions.",
            "itemtype": "method",
            "name": "viewGhosts",
            "params": [
                {
                    "name": "show",
                    "description": "Whether to show ghosts or not",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3192,
            "description": "Put a wireframe dome over a `Connector` object to indicate its position.\nThis method will not create geometry unless `params.visualize` was set\nto `true`.",
            "itemtype": "method",
            "name": "visualizeConnector",
            "params": [
                {
                    "name": "connector",
                    "description": "Connector to which to append geometry",
                    "type": "Object3D"
                },
                {
                    "name": "color",
                    "description": "Color of wireframe",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"rgb( 255, 255, 0 )\""
                }
            ],
            "return": {
                "description": "Wireframe entity",
                "type": "THREE.Mesh"
            },
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3226,
            "class": "EagleBrdRenderer",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3248,
            "description": "Angle measurement in radians",
            "itemtype": "property",
            "name": "angle",
            "type": "Number",
            "class": "EagleBrdRenderer.AngleData",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3255,
            "description": "Whether the angle includes a horizontal mirror",
            "itemtype": "property",
            "name": "mirror",
            "type": "Boolean",
            "default": "false",
            "class": "EagleBrdRenderer.AngleData",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3263,
            "description": "Whether the angle includes a vertical spin",
            "itemtype": "property",
            "name": "spin",
            "type": "Boolean",
            "default": "false",
            "class": "EagleBrdRenderer.AngleData",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3321,
            "description": "Curvature of wire segment",
            "itemtype": "property",
            "name": "curve",
            "type": "Number",
            "class": "EagleBrdRenderer.ChordData",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3328,
            "description": "Horizontal coodinate of wire start",
            "itemtype": "property",
            "name": "x1",
            "type": "Number",
            "class": "EagleBrdRenderer.ChordData",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3335,
            "description": "Vertical coodinate of wire start",
            "itemtype": "property",
            "name": "y1",
            "type": "Number",
            "class": "EagleBrdRenderer.ChordData",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3342,
            "description": "Horizontal coodinate of wire end",
            "itemtype": "property",
            "name": "x2",
            "type": "Number",
            "class": "EagleBrdRenderer.ChordData",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3349,
            "description": "Vertical coodinate of wire end",
            "itemtype": "property",
            "name": "y2",
            "type": "Number",
            "class": "EagleBrdRenderer.ChordData",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3356,
            "description": "Horizontal wire displacement",
            "itemtype": "property",
            "name": "dx",
            "type": "Number",
            "class": "EagleBrdRenderer.ChordData",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3363,
            "description": "Vertical wire displacement",
            "itemtype": "property",
            "name": "dy",
            "type": "Number",
            "class": "EagleBrdRenderer.ChordData",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3370,
            "description": "Distance between start and end points of wire.",
            "itemtype": "property",
            "name": "chord",
            "type": "Number",
            "class": "EagleBrdRenderer.ChordData",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3377,
            "description": "Angle from start to end points of wire.",
            "itemtype": "property",
            "name": "bearing",
            "type": "Number",
            "class": "EagleBrdRenderer.ChordData",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3386,
            "description": "Radius of chord arc. Per chord identity,\nchord = 2 * radius * sin( angle / 2 ), rearranged to acquire radius.",
            "itemtype": "property",
            "name": "radius",
            "type": "Number",
            "class": "EagleBrdRenderer.ChordData",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3394,
            "description": "Horizontal position of arc origin",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "EagleBrdRenderer.ChordData",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3401,
            "description": "Vertical position of arc origin",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "EagleBrdRenderer.ChordData",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3408,
            "description": "Angle from origin to wire start",
            "itemtype": "property",
            "name": "bearing1",
            "type": "Number",
            "class": "EagleBrdRenderer.ChordData",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3415,
            "description": "Angle from origin to wire end",
            "itemtype": "property",
            "name": "bearing2",
            "type": "Number",
            "class": "EagleBrdRenderer.ChordData",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3464,
            "description": "Master board to which this layer belongs",
            "itemtype": "property",
            "name": "board",
            "type": "EagleBrdRenderer",
            "class": "EagleBrdRenderer.Layer",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3471,
            "description": "Unordered list of elements to be drawn to this layer",
            "itemtype": "property",
            "name": "elements",
            "type": "Array",
            "class": "EagleBrdRenderer.Layer",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3478,
            "description": "Depth displacement of layer relative to board origin.\nNote that greater height will position the layer further from the camera.",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "default": "0",
            "class": "EagleBrdRenderer.Layer",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3487,
            "description": "List of BRD layer numbers to follow",
            "itemtype": "property",
            "name": "layers",
            "type": "Array",
            "class": "EagleBrdRenderer.Layer",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3494,
            "description": "Unique layer identifier",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "EagleBrdRenderer.Layer",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3501,
            "description": "Tags on this layer. List of strings.",
            "itemtype": "property",
            "name": "tags",
            "type": "Array",
            "class": "EagleBrdRenderer.Layer",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3508,
            "description": "Thickness of this layer. Measured in pixels, but they may be fractional.",
            "itemtype": "property",
            "name": "thickness",
            "type": "Number",
            "class": "EagleBrdRenderer.Layer",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3515,
            "description": "Whether this layer is part of the physical board",
            "itemtype": "property",
            "name": "visible",
            "default": "true",
            "class": "EagleBrdRenderer.Layer",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3527,
            "description": "Add an element (cloned) to this layer.\nThe element will not be checked for layer information.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "el",
                    "description": "XML element describing a BRD element",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "This Layer",
                "type": "EagleBrdRenderer.Layer"
            },
            "class": "EagleBrdRenderer.Layer",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3560,
            "description": "Assess an element for inclusion in this layer.\nIf the element contains or spans this layer, it is included.",
            "itemtype": "method",
            "name": "assessElementCandidate",
            "params": [
                {
                    "name": "el",
                    "description": "XML element describing a BRD primitive",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "This Layer",
                "type": "EagleBrdRenderer.Layer"
            },
            "class": "EagleBrdRenderer.Layer",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3659,
            "description": "Construct layer geometry. Paste the texture onto a rectangle.",
            "itemtype": "method",
            "name": "buildGeometry",
            "class": "EagleBrdRenderer.Layer",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3672,
            "description": "Geometry for layer, consisting of two flat planes",
            "itemtype": "property",
            "name": "geometry",
            "type": "THREE.BoxGeometry",
            "class": "EagleBrdRenderer.Layer",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3696,
            "description": "Texture for layer",
            "itemtype": "property",
            "name": "texture",
            "type": "THREE.Texture",
            "class": "EagleBrdRenderer.Layer",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3711,
            "description": "Material for layer",
            "itemtype": "property",
            "name": "material",
            "type": "THREE.Material",
            "class": "EagleBrdRenderer.Layer",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3718,
            "description": "Mesh for layer; THREE scene component",
            "itemtype": "property",
            "name": "mesh",
            "type": "THREE.Mesh",
            "class": "EagleBrdRenderer.Layer",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3731,
            "description": "Return a list of elements. If no tags are passed as parameters,\nall elements will be returned. Otherwise, only elements that match\none of the specified tags are returned.",
            "itemtype": "method",
            "name": "getElements",
            "params": [
                {
                    "name": "tags",
                    "description": "Tags to return",
                    "type": "String",
                    "optional": true,
                    "multiple": true
                }
            ],
            "class": "EagleBrdRenderer.Layer",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3757,
            "description": "Return whether this layer has the specified tag.",
            "itemtype": "method",
            "name": "hasTag",
            "params": [
                {
                    "name": "tag",
                    "description": "Tag to assess",
                    "type": "String"
                }
            ],
            "return": {
                "description": "boolean"
            },
            "class": "EagleBrdRenderer.Layer",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3774,
            "description": "Initialise the buffer for this layer.",
            "itemtype": "method",
            "name": "initBuffer",
            "class": "EagleBrdRenderer.Layer",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3780,
            "description": "Texture buffer to which layer elements are rendered",
            "itemtype": "property",
            "name": "buffer",
            "type": "HTMLCanvasElement",
            "class": "EagleBrdRenderer.Layer",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3789,
            "description": "Texture drawing context for this layer",
            "itemtype": "property",
            "name": "ctx",
            "type": "CanvasRenderingContext2D",
            "class": "EagleBrdRenderer.Layer",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        },
        {
            "file": "src/eagle-brd-renderer.js",
            "line": 3807,
            "description": "Transform the drawing context according to properties on BRD elements.\n\nNote: this method does not save or restore context transform.",
            "itemtype": "method",
            "name": "orientContext",
            "params": [
                {
                    "name": "el",
                    "description": "BRD element to serve as transformation basis",
                    "type": "Element"
                },
                {
                    "name": "scale",
                    "description": "`coordScale` factor",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "class": "EagleBrdRenderer.Layer",
            "module": "EagleBrdRenderer",
            "namespace": "EagleBrdRenderer"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type",
            "line": " src/eagle-brd-renderer.js:3226"
        }
    ]
}